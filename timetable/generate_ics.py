from __future__ import print_function

from icalendar import Calendar

from timetable import Course
from utils import dates, build_event_duration, generate_india_time, next_weekday

WORKING_DAYS = dates.get_dates()


def generate_ics(courses: list[Course], output_filename):
    """
    Creates an ICS file `timetable.ics` with the timetable data present inside the 'timetable' parameter.
    """
    cal = Calendar()
    cal.add("prodid", "-//Your Timetable generated by GYFT//mxm.dk//")
    cal.add("version", "1.0")
    for course in courses:
        start_dates = [next_weekday(x[0], course.day) for x in WORKING_DAYS]
        lecture_begins_stamps = [
            generate_india_time(start.year, start.month, start.day,
                                course.start_time, 0) for start in start_dates
        ]
        for lecture_begin, [_, period_end] in zip(
                lecture_begins_stamps, WORKING_DAYS
        ):
            event = build_event_duration(
                course.title,
                course.code,
                lecture_begin,
                course.get_duration(),
                course.get_location(),
                "weekly",
                period_end,
            )
            cal.add_component(event)

    with open(output_filename, "wb") as f:
        f.write(cal.to_ical())
        print("\nYour timetable has been written to %s" % output_filename)
